[{"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\index.js":"1","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\App.js":"2","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\components\\history.jsx":"3","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\components\\home.jsx":"4","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\services\\currencyConvertor.js":"5","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\store.js":"6","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\redux\\conversions.js":"7","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\redux\\currencies.js":"8","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\redux\\rootReducer.js":"9","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\redux\\admin.js":"10","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminNavbar.jsx":"11","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\components\\adminComponents\\adminHome.jsx":"12","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\ListTable.js":"13","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminDashboard.jsx":"14","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\routes\\adminRoutes.js":"15","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminForm.jsx":"16","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\common\\input.jsx":"17","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\common\\pagination.jsx":"18","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminPage.jsx":"19","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminTable.jsx":"20","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\common\\selector.jsx":"21","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminMenu.jsx":"22","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\common\\select.jsx":"23"},{"size":747,"mtime":1611265446304,"results":"24","hashOfConfig":"25"},{"size":1092,"mtime":1611355433191,"results":"26","hashOfConfig":"25"},{"size":734,"mtime":1610138450399,"results":"27","hashOfConfig":"25"},{"size":4015,"mtime":1611264799493,"results":"28","hashOfConfig":"25"},{"size":1091,"mtime":1610138450401,"results":"29","hashOfConfig":"25"},{"size":729,"mtime":1611265441429,"results":"30","hashOfConfig":"25"},{"size":2880,"mtime":1611266335406,"results":"31","hashOfConfig":"25"},{"size":2797,"mtime":1611265742914,"results":"32","hashOfConfig":"25"},{"size":240,"mtime":1610149303569,"results":"33","hashOfConfig":"25"},{"size":2713,"mtime":1611958877734,"results":"34","hashOfConfig":"25"},{"size":1833,"mtime":1612005765008,"results":"35","hashOfConfig":"25"},{"size":3056,"mtime":1612465821452,"results":"36","hashOfConfig":"25"},{"size":1064,"mtime":1611783780216,"results":"37","hashOfConfig":"25"},{"size":1520,"mtime":1612005805258,"results":"38","hashOfConfig":"25"},{"size":341,"mtime":1611099779512,"results":"39","hashOfConfig":"25"},{"size":4324,"mtime":1612457954763,"results":"40","hashOfConfig":"25"},{"size":534,"mtime":1612027842363,"results":"41","hashOfConfig":"25"},{"size":1085,"mtime":1611965487931,"results":"42","hashOfConfig":"25"},{"size":4549,"mtime":1612005699682,"results":"43","hashOfConfig":"25"},{"size":2483,"mtime":1611875356009,"results":"44","hashOfConfig":"25"},{"size":2173,"mtime":1612006959447,"results":"45","hashOfConfig":"25"},{"size":1995,"mtime":1612004508293,"results":"46","hashOfConfig":"25"},{"size":582,"mtime":1612458012406,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"1nzmswd",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\index.js",["101","102"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { persistor } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        {/* <PersistGate loading={null} persistor={persistor}> */}\r\n          <App />\r\n        {/* </PersistGate> */}\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n",["103","104"],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\App.js",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\components\\history.jsx",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\components\\home.jsx",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\services\\currencyConvertor.js",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\store.js",["105"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; \r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./redux/rootReducer\";\r\n\r\nconst initialState = {};\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n // persistedReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n  export let persistor = persistStore(store);\r\n\r\n\r\nexport default store;\r\n\r\n","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\redux\\conversions.js",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\redux\\currencies.js",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\redux\\rootReducer.js",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\redux\\admin.js",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminNavbar.jsx",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\components\\adminComponents\\adminHome.jsx",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\ListTable.js",["106"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { addTable } from \"./redux/admin\";\r\nfunction ListTable(props) {\r\n  ListTable.prototype = {\r\n    tables: PropTypes.array.isRequired,\r\n    addTable: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const {\r\n    tables,\r\n    addTable,\r\n    data,\r\n    tableAttributes,\r\n    search,\r\n    filters,\r\n    elementAdd,\r\n    elementUpdate,\r\n    elementDelete,\r\n  } = props;\r\n\r\n  const tableExist = (tableName) => {\r\n    const tableIndex = tables.findIndex(\r\n      (table) => table.data.name === tableName\r\n    );\r\n    return tableIndex;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tableExist(data.name) === -1)\r\n      addTable(\r\n        data,\r\n        tableAttributes,\r\n        search,\r\n        filters,\r\n        elementAdd,\r\n        elementUpdate,\r\n        elementDelete\r\n      );\r\n  }, []);\r\n  return <div></div>;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ tables: state.admin.tables });\r\n\r\nexport default connect(mapStateToProps, { addTable })(ListTable);\r\n","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminDashboard.jsx",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\routes\\adminRoutes.js",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminForm.jsx",["107","108","109"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Input from \"./common/input\";\r\nimport Select from \"./common/select\";\r\n\r\nfunction AdminForm(props) {\r\n  AdminForm.prototype = {\r\n    currentTable: PropTypes.object.isRequired,\r\n    store: PropTypes.object.isRequired,\r\n  };\r\n  const { currentTable, store } = props;\r\n  const currentId = Number(props.match.params.id);\r\n  const [currentComponent, setCurrentComponent] = useState({});\r\n  const [intialComponent, setIntialComponent] = useState({});\r\n\r\n  const setComponent = () => {\r\n    let component = {};\r\n    let attributsList = [];\r\n\r\n    currentTable?.tableAttributes?.map((attribute) =>\r\n      attributsList.push(attribute.title)\r\n    );\r\n    if (props.match.url === `/admin/${currentTable.data?.name}/new`) {\r\n      attributsList.map((attribute) => (component[`${attribute}`] = \"\"));\r\n    } else {\r\n      attributsList.map(\r\n        (attribute) =>\r\n          (component[`${attribute}`] = getInputValue(currentId, attribute))\r\n      );\r\n    }\r\n    return component;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIntialComponent(setComponent());\r\n  }, []);\r\n\r\n  let component = intialComponent;\r\n\r\n  const getInputValue = (id, attribute) => {\r\n    if (store?.getState()[`${currentTable.data?.name}`]) {\r\n      const keys = currentTable.data?.reduxData.split(\".\");\r\n      let result = store?.getState();\r\n      keys.forEach((key) => {\r\n        result = result[`${key}`];\r\n      });\r\n      result = result.filter((element) => element.id == id);\r\n      result = result[0][`${attribute}`];\r\n      return result;\r\n    } else return [];\r\n  };\r\n\r\n  const getSelectValue = (currentOption) => {\r\n    let options = [];\r\n    let result = [];\r\n    if (store?.getState()[`${currentTable?.data?.name}`]) {\r\n      const keys = currentTable?.data?.reduxData.split(\".\");\r\n      result = store?.getState();\r\n      keys.forEach((key) => {\r\n        result = result[`${key}`];\r\n      });\r\n    }\r\n\r\n    result.map((element) => {\r\n      let index = options.indexOf(element[`${currentOption}`]);\r\n      if (index === -1) options.push(element[`${currentOption}`]);\r\n    });\r\n\r\n    return options;\r\n  };\r\n\r\n  const handleChange = (e, attribute) => {\r\n    if (e.target.name === attribute) {\r\n      component[`${attribute}`] = e.currentTarget.value;\r\n      setCurrentComponent(component);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (props.match.url === `/admin/${currentTable.data.name}/new`) {\r\n      currentTable.elementAdd(currentComponent);\r\n      props.history.push(`/admin/`);\r\n    } else {\r\n      if (Object.keys(currentComponent).length === 0) {\r\n        currentTable.elementUpdate(currentId, intialComponent);\r\n      } else {\r\n        currentTable.elementUpdate(currentId, currentComponent);\r\n      }\r\n      props.history.push(`/admin/`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={(e) => handleSubmit(e)}\r\n      style={{ width: \"60%\", margin: \"0 auto\" }}\r\n    >\r\n      {currentTable?.tableAttributes?.map((attribute) =>\r\n        attribute.format === \"input\" ? (\r\n          <Input\r\n            key={attribute.label}\r\n            controlId={`formBasic${attribute.label}`}\r\n            label={attribute.label}\r\n            name={attribute.title}\r\n            type={attribute.type}\r\n            value={\r\n              props.match.url !== `/admin/${currentTable.data?.name}/new`\r\n                ? getInputValue(currentId, attribute.title)\r\n                : \"\"\r\n            }\r\n            handleChange={(e) => handleChange(e, attribute.title)}\r\n          />\r\n        ) : (\r\n          <Select\r\n            key={attribute.label}\r\n            controlId={`formBasic${attribute.label}`}\r\n            label={attribute.label}\r\n            name={attribute.title}\r\n            options={getSelectValue(attribute.title)}\r\n            handleChange={(e) => handleChange(e, attribute.title)}\r\n          />\r\n        )\r\n      )}\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentTable: state.admin.currentTable,\r\n  store: state.admin.currentTable.data?.store,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(AdminForm);\r\n","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\common\\input.jsx",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\common\\pagination.jsx",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminPage.jsx",["110"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport _ from \"lodash\";\r\nimport AdminNavbar from \"./adminNavbar\";\r\nimport AdminDashboard from \"./adminDashboard\";\r\nimport AdminTable from \"./adminTable\";\r\nimport AdminMenu from \"./adminMenu\";\r\nimport Pagination from \"./common/pagination\";\r\n\r\nfunction AdminPage(props) {\r\n  AdminPage.prototype = {\r\n    currentTable: PropTypes.object.isRequired,\r\n    store: PropTypes.object.isRequired,\r\n  };\r\n\r\n  const { currentTable, store } = props;\r\n  const [sortBy, setSortBy] = useState(\"id\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [currentFilter, setCurrentFilter] = useState(\"Filters\");\r\n  const [currentOption, setCurrentOption] = useState(\"Options\");\r\n\r\n  const pageSize = 10;\r\n\r\n  const handleSearch = (e) => {\r\n    setCurrentPage(1);\r\n    setSearchQuery(e.currentTarget.value);\r\n  };\r\n\r\n  const handleFilter = (filter) => {\r\n    setCurrentFilter(filter);\r\n  };\r\n  const handleOption = (option) => {\r\n    setCurrentOption(option);\r\n  };\r\n\r\n  const getFilterOptions = (currentFilter) => {\r\n    let filterOptions = [\"Options\"];\r\n    let result = [];\r\n    if (store?.getState()[`${currentTable?.data?.name}`]) {\r\n      const keys = currentTable?.data?.reduxData.split(\".\");\r\n      result = store?.getState();\r\n      keys.forEach((key) => {\r\n        result = result[`${key}`];\r\n      });\r\n    }\r\n\r\n    result.map((element) => {\r\n      if (currentFilter !== \"Filters\") {\r\n        let index = filterOptions.indexOf(element[`${currentFilter}`]);\r\n        if (index === -1) filterOptions.push(element[`${currentFilter}`]);\r\n      }\r\n    });\r\n\r\n    return filterOptions;\r\n  };\r\n\r\n  const renderSortIcon = (sortType) => {\r\n    if (sortType !== sortBy) return null;\r\n    if (sortOrder === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  const onSort = (sortType) => {\r\n    setSortBy(sortType);\r\n    sortOrder === \"desc\" ? setSortOrder(\"asc\") : setSortOrder(\"desc\");\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const paginate = (items, pageNumber, pageSize) => {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n  };\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const getCurrentTableData = (sortType) => {\r\n    if (store?.getState()[`${currentTable?.data?.name}`]) {\r\n      const keys = currentTable?.data?.reduxData.split(\".\");\r\n      let result = store?.getState();\r\n      keys.forEach((key) => {\r\n        result = result[`${key}`];\r\n      });\r\n      // 1-filter\r\n      let data = [];\r\n      if (searchQuery && currentTable?.search)\r\n        data = result.filter((element) =>\r\n          element[`${currentTable?.search}`]\r\n            ?.toLowerCase()\r\n            .startsWith(searchQuery.toLowerCase())\r\n        );\r\n      else if (currentOption === \"Options\" || !currentTable?.filters)\r\n        data = result;\r\n      else\r\n        data = result.filter(\r\n          (element) => element[`${currentFilter}`] === currentOption\r\n        );\r\n      // 2-sort\r\n      const sorted = _.orderBy(data, sortType, sortOrder);\r\n      // 3-paginate\r\n      const modelData = paginate(sorted, currentPage, pageSize);\r\n      const count =\r\n        currentOption === \"Options\" && !searchQuery\r\n          ? result.length\r\n          : data.length;\r\n      return {\r\n        modelData,\r\n        count,\r\n      };\r\n    } else return [];\r\n  };\r\n\r\n  const { modelData, count } = getCurrentTableData(sortBy);\r\n\r\n  return (\r\n    <div>\r\n      <AdminNavbar handleSearch={handleSearch} />\r\n      <AdminDashboard />\r\n      <AdminMenu\r\n        filters={currentTable?.filters}\r\n        currentFilter={currentFilter}\r\n        handleFilter={handleFilter}\r\n        currentOption={currentOption}\r\n        handleOption={handleOption}\r\n        filterOptions={getFilterOptions}\r\n      />\r\n      <AdminTable\r\n        onSort={onSort}\r\n        renderSortIcon={renderSortIcon}\r\n        modelData={modelData}\r\n      />\r\n      <Pagination\r\n        itemsCounts={count}\r\n        pageSize={pageSize}\r\n        currentPage={currentPage}\r\n        onPageChange={handlePageChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentTable: state.admin.currentTable,\r\n  store: state.admin.currentTable.data?.store,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(AdminPage);\r\n","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminTable.jsx",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\common\\selector.jsx",["111"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { filterSelectorShowed, filterSelectorHided } from \"../redux/admin\";\r\n\r\nfunction Selector(props) {\r\n  Selector.prototype = {\r\n    currentTable: PropTypes.object.isRequired,\r\n    filterSelectorShowed: PropTypes.func.isRequired,\r\n    filterSelectorHided: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const {\r\n    currentTable,\r\n    filterSelectorShowed,\r\n    filterSelectorHided,\r\n    filters,\r\n    currentFilter,\r\n    filterType,\r\n    handleFilter,\r\n    currentOption,\r\n    handleOption,\r\n    filterOptions,\r\n  } = props;\r\n\r\n  const [options, setOptions] = useState(filters);\r\n\r\n  useEffect(() => {\r\n    const getOption = () => {\r\n      if (filterType === \"filterList\") setOptions(filters);\r\n      if (filterType === \"filterOptions\")\r\n        setOptions(filterOptions(currentFilter));\r\n    };\r\n    getOption();\r\n    if (!currentTable?.filters) filterSelectorHided();\r\n  }, [filters, currentFilter]);\r\n\r\n  return (\r\n    <div>\r\n      {filters && (\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\" size=\"sm\">\r\n            {filterType === \"filterList\" ? currentFilter : currentOption}\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu>\r\n            {options?.map((filter) => (\r\n              <Dropdown.Item\r\n                key={filterType + filter}\r\n                onClick={() => {\r\n                  filterSelectorShowed();\r\n                  if (filterType === \"filterList\") {\r\n                    handleFilter(filter);\r\n                  }\r\n                  if (filterType === \"filterOptions\") {\r\n                    handleOption(filter);\r\n                  }\r\n                }}\r\n              >\r\n                {filter}\r\n              </Dropdown.Item>\r\n            ))}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ currentTable: state.admin.currentTable });\r\n\r\nexport default connect(mapStateToProps, {\r\n  filterSelectorShowed,\r\n  filterSelectorHided,\r\n})(Selector);\r\n","D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\adminMenu.jsx",[],"D:\\Career\\JavaScript\\Projects\\currency_converter_app\\CurrencyConverterApp-Redux_Thunk_Saga\\src\\admin\\js\\common\\select.jsx",[],{"ruleId":"112","severity":1,"message":"113","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":21},{"ruleId":"112","severity":1,"message":"116","line":11,"column":10,"nodeType":"114","messageId":"115","endLine":11,"endColumn":19},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"112","severity":1,"message":"121","line":15,"column":7,"nodeType":"114","messageId":"115","endLine":15,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":41,"column":6,"nodeType":"124","endLine":41,"endColumn":8,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":38,"column":6,"nodeType":"124","endLine":38,"endColumn":8,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":49,"column":54,"nodeType":"130","messageId":"131","endLine":49,"endColumn":56},{"ruleId":"132","severity":1,"message":"133","line":66,"column":26,"nodeType":"134","messageId":"135","endLine":66,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":50,"column":26,"nodeType":"134","messageId":"135","endLine":50,"endColumn":28},{"ruleId":"122","severity":1,"message":"136","line":37,"column":6,"nodeType":"124","endLine":37,"endColumn":30,"suggestions":"137"},"no-unused-vars","'PersistGate' is defined but never used.","Identifier","unusedVar","'persistor' is defined but never used.","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"'persistedReducer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'addTable', 'data', 'elementAdd', 'elementDelete', 'elementUpdate', 'filters', 'search', 'tableAttributes', and 'tableExist'. Either include them or remove the dependency array.","ArrayExpression",["140"],"React Hook useEffect has a missing dependency: 'setComponent'. Either include it or remove the dependency array.",["141"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'currentTable?.filters', 'filterOptions', 'filterSelectorHided', and 'filterType'. Either include them or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [addTable, data, elementAdd, elementDelete, elementUpdate, filters, search, tableAttributes, tableExist]",{"range":"149","text":"150"},"Update the dependencies array to be: [setComponent]",{"range":"151","text":"152"},"Update the dependencies array to be: [filters, currentFilter, currentTable?.filters, filterSelectorHided, filterType, filterOptions]",{"range":"153","text":"154"},[891,893],"[addTable, data, elementAdd, elementDelete, elementUpdate, filters, search, tableAttributes, tableExist]",[1233,1235],"[setComponent]",[1051,1075],"[filters, currentFilter, currentTable?.filters, filterSelectorHided, filterType, filterOptions]"]